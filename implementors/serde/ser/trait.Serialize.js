(function() {var implementors = {};
implementors["actor"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.104/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"actor/struct.ActorID.html\" title=\"struct actor::ActorID\">ActorID</a>","synthetic":false,"types":["actor::ActorID"]}];
implementors["clock"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.104/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"clock/struct.ChainEpoch.html\" title=\"struct clock::ChainEpoch\">ChainEpoch</a>","synthetic":false,"types":["clock::ChainEpoch"]}];
implementors["crypto"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.104/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"crypto/struct.Signature.html\" title=\"struct crypto::Signature\">Signature</a>","synthetic":false,"types":["crypto::signature::Signature"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.104/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"crypto/struct.VRFResult.html\" title=\"struct crypto::VRFResult\">VRFResult</a>","synthetic":false,"types":["crypto::vrf::VRFResult"]}];
implementors["forest_address"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.104/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"forest_address/struct.Address.html\" title=\"struct forest_address::Address\">Address</a>","synthetic":false,"types":["forest_address::Address"]}];
implementors["forest_blocks"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.104/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"forest_blocks/struct.Block.html\" title=\"struct forest_blocks::Block\">Block</a>","synthetic":false,"types":["forest_blocks::block::Block"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.104/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"forest_blocks/struct.TxMeta.html\" title=\"struct forest_blocks::TxMeta\">TxMeta</a>","synthetic":false,"types":["forest_blocks::block::TxMeta"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.104/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"forest_blocks/struct.BlockHeader.html\" title=\"struct forest_blocks::BlockHeader\">BlockHeader</a>","synthetic":false,"types":["forest_blocks::header::BlockHeader"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.104/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"forest_blocks/struct.Ticket.html\" title=\"struct forest_blocks::Ticket\">Ticket</a>","synthetic":false,"types":["forest_blocks::ticket::Ticket"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.104/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"forest_blocks/struct.EPostTicket.html\" title=\"struct forest_blocks::EPostTicket\">EPostTicket</a>","synthetic":false,"types":["forest_blocks::ticket::EPostTicket"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.104/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"forest_blocks/struct.EPostProof.html\" title=\"struct forest_blocks::EPostProof\">EPostProof</a>","synthetic":false,"types":["forest_blocks::ticket::EPostProof"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.104/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"forest_blocks/struct.TipSetKeys.html\" title=\"struct forest_blocks::TipSetKeys\">TipSetKeys</a>","synthetic":false,"types":["forest_blocks::tipset::TipSetKeys"]}];
implementors["forest_cid"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.104/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"forest_cid/struct.Cid.html\" title=\"struct forest_cid::Cid\">Cid</a>","synthetic":false,"types":["forest_cid::Cid"]}];
implementors["forest_message"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.104/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"forest_message/struct.SignedMessage.html\" title=\"struct forest_message::SignedMessage\">SignedMessage</a>","synthetic":false,"types":["forest_message::signed_message::SignedMessage"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.104/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"forest_message/struct.UnsignedMessage.html\" title=\"struct forest_message::UnsignedMessage\">UnsignedMessage</a>","synthetic":false,"types":["forest_message::unsigned_message::UnsignedMessage"]}];
implementors["vm"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.104/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"vm/struct.MethodNum.html\" title=\"struct vm::MethodNum\">MethodNum</a>","synthetic":false,"types":["vm::method::MethodNum"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.104/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"vm/struct.Serialized.html\" title=\"struct vm::Serialized\">Serialized</a>","synthetic":false,"types":["vm::method::Serialized"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.104/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"vm/struct.TokenAmount.html\" title=\"struct vm::TokenAmount\">TokenAmount</a>","synthetic":false,"types":["vm::token::TokenAmount"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()